 CREATE DATABASE baitap_sql_buoi1; 
USE baitap_sql_buoi1;

CREATE TABLE food_type(
type_id INT PRIMARY KEY AUTO_INCREMENT,
type_name VARCHAR(255)
);

CREATE TABLE food(
food_id INT PRIMARY KEY AUTO_INCREMENT,
food_name VARCHAR(255),
image VARCHAR(255),
price FLOAT,
description VARCHAR(255),
type_id INT,

FOREIGN KEY (type_id) REFERENCES food_type(type_id)
);

CREATE TABLE sub_food(
sub_id INT PRIMARY KEY AUTO_INCREMENT,
sub_name VARCHAR(255),
sub_price FLOAT,
food_id INT,

FOREIGN KEY (food_id) REFERENCES food(food_id)
);

CREATE TABLE user(
user_id INT PRIMARY KEY AUTO_INCREMENT,
full_name VARCHAR(255),
email VARCHAR(255),
password VARCHAR(255)
);

CREATE TABLE `order`(
user_id INT,
food_id INT,
amount INT,
code VARCHAR(255),
arr_sub_id VARCHAR(255),

FOREIGN KEY (user_id) REFERENCES user(user_id),
FOREIGN KEY (food_id) REFERENCES food(food_id)
);

CREATE TABLE restaurant(
res_id INT PRIMARY KEY AUTO_INCREMENT,
res_name VARCHAR(255),
image VARCHAR(255),
description VARCHAR(255)
);

CREATE TABLE rate_res(
user_id INT,
res_id INT,
amount INT,
date_rate DATETIME,

FOREIGN KEY (user_id) REFERENCES user(user_id),
FOREIGN KEY (res_id) REFERENCES restaurant(res_id)
);

CREATE TABLE like_res(
user_id INT, 
res_id INT,
date_like DATETIME,

FOREIGN KEY (user_id) REFERENCES user(user_id),
FOREIGN KEY (res_id) REFERENCES restaurant(res_id)
);

USE db_food; 
-- Câu 1
SELECT user_id, COUNT(res_id) from like_res GROUP BY user_id ORDER BY COUNT(res_id) DESC LIMIT 5;
-- Câu 2
SELECT res_id , COUNT(user_id) from like_res GROUP BY res_id  ORDER BY COUNT(user_id) DESC LIMIT 5;
-- Câu 3
SELECT user_id, SUM(amount) AS total_amount FROM `order` GROUP BY user_id ORDER BY SUM(amount) DESC LIMIT 1;

SELECT user_id, SUM(amount) AS total_amount
FROM `order`
GROUP BY user_id
HAVING SUM(amount) = (
  SELECT MAX(total_amount) FROM (
    SELECT SUM(amount) AS total_amount
    FROM `order`
    GROUP BY user_id
  ) AS totals
);

-- Câu 4
SELECT user.user_id FROM user LEFT JOIN  `order` ON user.user_id = `order`.user_id 
LEFT JOIN rate_res ON user.user_id = rate_res.user_id
LEFT JOIN like_res ON user.user_id = like_res.user_id
WHERE `order`.amount IS NULL
  AND rate_res.amount IS NULL
  AND like_res.date_like IS NULL;

-- Câu 5
SELECT AVG(sub_price) FROM sub_food; 
 
  
 